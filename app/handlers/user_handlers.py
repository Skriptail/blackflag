import json

from aiogram import Bot, Dispatcher, F, Router, types
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, FSInputFile

from filters import ChatTypeFilter
from keyboards import (
    back_to_main_kb,
    intro_kb,
    tarif_selection_kb,
    after_tarif_kb
)

user_router = Router()
user_router.message.filter(ChatTypeFilter(["private"]))

class AddUser(StatesGroup):
    name = State()
    phone_number = State()
    tarif = State()
    last_message = State()

    texts = {
        'AddUser:name': '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∑–∞–Ω–æ–≤–æ:',
        'AddUser:phone_number': '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∑–∞–Ω–æ–≤–æ:',
        'AddUser:number_of_table': '–í–≤–µ–¥–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –∑–∞–Ω–æ–≤–æ:',
    }
@user_router.message(CommandStart())
async def start_handler(message: types.Message, state: FSMContext):
    sent_message = await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –ë–æ—Ç —Å—Ç—É–¥–∏–∏ —Ç–∞–Ω—Ü–µ–≤ BlackFlag.üè¥\n"
        "–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ",
        reply_markup=intro_kb)
    await state.update_data(last_message=sent_message.message_id)

@user_router.callback_query(F.data == "book")
async def add_goal(callback_query: types.CallbackQuery, state: FSMContext):
    sent_message = await callback_query.message.edit_text("–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –∏ –∑–∞–ø–∏—à–µ–º—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ! –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è: ", reply_markup=back_to_main_kb)
    await state.update_data(last_message_id=sent_message.message_id) 
    await state.set_state(AddUser.name)

@user_router.callback_query(F.data == "back_to_main")
async def add_goal(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    # last_message_id = data.get('last_message_id')
    # if last_message_id:
    #     await bot.delete_message(callback_query.message.chat.id, message_id=last_message_id)
    await callback_query.message.edit_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é", reply_markup=intro_kb)
    await state.clear()

@user_router.message(AddUser.name)
async def add_phone_number(message: types.Message, state: FSMContext, bot: Bot):
    await state.update_data(name=message.text)
    await message.delete()
    data = await state.get_data()
    last_message_id = data.get('last_message_id')

    await bot.edit_message_text(f"–ò–º—è: {data['name']}\n"
                                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ",
                                chat_id=message.chat.id,
                                message_id=last_message_id,
                                reply_markup=back_to_main_kb)
    await state.set_state(AddUser.phone_number)

@user_router.message(AddUser.phone_number)
async def add_tarif(message: types.Message, bot: Bot, state: FSMContext):

    await state.update_data(phone_number=message.text)
    await message.delete()
    data = await state.get_data()
    last_message_id = data.get('last_message_id')
    await bot.edit_message_text(f"–ò–º—è: {data['name']}\n"
                                f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['phone_number']}\n"
                                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ: ",
                                chat_id=message.chat.id,
                                message_id=last_message_id,
                                reply_markup=tarif_selection_kb)
    await state.set_state(AddUser.tarif)

@user_router.callback_query(F.data.startswith('tarif'))
async def add_number_of_table(callback_query: types.CallbackQuery, bot: Bot, state: FSMContext):
    selected_number_of_table = callback_query.data.split("_")[1]
    await state.update_data(tarif=selected_number_of_table)
    data = await state.get_data()
    last_message_id = data.get('last_message_id')
    await bot.edit_message_text(f"–í–∞—à–µ –∏–º—è: {data['name']}\n"
        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['phone_number']}\n"
        f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ: {data['tarif']}\n",
        chat_id=callback_query.message.chat.id,
        message_id=last_message_id,
        reply_markup=after_tarif_kb)
    other_user_chat_id = 485061270
    await bot.send_message(
        other_user_chat_id,
        '–î–∞–Ω–Ω—ã–µ –∏–∑ –±–æ—Ç–∞:\n'
        f'–ò–º—è: {data["name"]}\n'
        f'–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ: {data["tarif"]}\n'
        f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data["phone_number"]}\n')

@user_router.callback_query(F.data == "masters")
async def masters(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    last_message_id = data.get('last_message_id')
    await callback_query.message.edit_text('–ù–∞—à–∏ –ø–µ–¥–∞–≥–æ–≥–∏\n'
                           '–¢–∞—Ç—å—è–Ω–∞ –°–µ–¥—ã—Ö - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤: –í—Ç–æ—Ä–Ω–∏–∫/–ß–µ—Ç–≤–µ—Ä–≥ 21:00\n'
                           '–•–ª–µ–±–Ω–∏–∫–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è -  jazz funk, choreo', reply_markup=back_to_main_kb)

@user_router.callback_query(F.data == "price")
async def price(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    last_message_id = data.get('last_message_id')
    await callback_query.message.edit_text('–ù–∞—à –ø—Ä–∞–π—Å –ª–∏—Å—Ç:\n'
                           '–†–∞–∑–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ - 800‚ÇΩ\n'
                           '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ–±–Ω–æ–µ - 600‚ÇΩ\n'
                           '<b>–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã</b>\n'
                           '<i>–°–∫–∏–¥–∫–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö –¥–Ω–µ–π –ø–æ—Å–ª–µ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è</i>\n'
                           '<i>–¶–µ–Ω–∞ —Å–æ –∑–≤–µ–∑–¥–æ—á–∫–æ–π —É–∫–∞–∑–∞–Ω–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏</i>\n'
                           '4 –∑–∞–Ω—è—Ç–∏—è - 2700‚ÇΩ (2150‚ÇΩ*)\n'
                           '8 –∑–∞–Ω—è—Ç–∏–π - 5000‚ÇΩ (4000‚ÇΩ*)\n'
                           '12 –∑–∞–Ω—è—Ç–∏–π - 6900‚ÇΩ (5500‚ÇΩ*)\n',  reply_markup=back_to_main_kb, parse_mode='HTML')

@user_router.callback_query(F.data == "rent")
async def rent(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    await callback_query.message.edit_text('<b>140–∫–≤.–º</b>, –¥–≤–µ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–∏\n'
                                           '–í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ - 4–º\n'
                                           '–ü–æ–∫—Ä—ã—Ç–∏–µ - –ª–∏–Ω–æ–ª–µ—É–º\n'
                                           '–û–∫–Ω–∞ —Å —Ä—É–ª–æ–Ω–Ω—ã–º–∏ —à—Ç–æ—Ä–∞–º–∏\n'
                                           '–ó–≤—É–∫ - –∫–æ–ª–æ–Ω–∫–∏\n'
                                           '–í–æ–∑–¥—É—Ö - –¥–≤–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞\n'
                                           '–ê —Ç–∞–∫–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–∏—Ö —Å—ä–µ–º–æ–∫\n'
                                           '<i>–ú–∞–ª—ã—à–µ–≤–∞ 28</i>',  reply_markup=back_to_main_kb, parse_mode='HTML')

@user_router.callback_query(F.data == "help")
async def help(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    await callback_query.message.edit_text('<b>–ü–æ–º–æ—â—å –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ</b>\n'
                                           'https://vk.link/blackflagekb - –≥—Ä—É–ø–ø–∞ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ\n'
                                           '89518013886 - –Ω–æ–º–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏',  reply_markup=back_to_main_kb, parse_mode='HTML')
